{"version":3,"file":"i18n.js","sourceRoot":"","sources":["../../../../../../../packages/theme/src/services/i18n/i18n.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,cAAc,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3D,OAAO,EAAc,eAAe,EAAE,MAAM,MAAM,CAAC;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;AAcxC,WAAa,gBAAgB,GAAG,IAAI,cAAc,CAChD,sBAAsB,CACvB,CAAC;;;uBAIkB,IAAI,eAAe,CAAS,IAAI,CAAC;;IAEnD,sBAAI,wCAAM;;;;QAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,IAAI,EAAT,CAAS,CAAC,CAAC,CAAC;SACjE;;;OAAA;;;;;IAED,kCAAG;;;;IAAH,UAAI,IAAY;QACd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzB;;;;IAED,uCAAQ;;;IAAR;QACE,OAAO,EAAE,CAAC;KACX;;;;;IAED,oCAAK;;;;IAAL,UAAM,GAAW;QACf,OAAO,GAAG,CAAC;KACZ;;gBAlBF,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;+BApBlC;;SAqBa,oBAAoB","sourcesContent":["import { InjectionToken, Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nexport interface AlainI18NService {\r\n  [key: string]: any;\r\n\r\n  use(lang: string): void;\r\n\r\n  getLangs(): any[];\r\n\r\n  fanyi(key: string): any;\r\n\r\n  readonly change: Observable<string>;\r\n}\r\n\r\nexport const ALAIN_I18N_TOKEN = new InjectionToken<AlainI18NService>(\r\n  'alainTranslatorToken',\r\n);\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlainI18NServiceFake implements AlainI18NService {\r\n  private change$ = new BehaviorSubject<string>(null);\r\n\r\n  get change(): Observable<string> {\r\n    return this.change$.asObservable().pipe(filter(w => w != null));\r\n  }\r\n\r\n  use(lang: string): void {\r\n    this.change$.next(lang);\r\n  }\r\n\r\n  getLangs(): any[] {\r\n    return [];\r\n  }\r\n\r\n  fanyi(key: string) {\r\n    return key;\r\n  }\r\n}\r\n"]}