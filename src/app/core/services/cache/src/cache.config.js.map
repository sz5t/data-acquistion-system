{"version":3,"file":"cache.config.js","sourceRoot":"","sources":["../../../../packages/cache/cache.config.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;;;;;;oBASb,SAAS;;;;;;;sBAOR,EAAE;;;;sBAIb,EAAE;;;;wBAIA,cAAc;;;gBAtBnC,UAAU;;2BAFX;;SAGa,gBAAgB","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DelonCacheConfig {\r\n  /**\r\n   * 缓存模式，默认：`promise`\r\n   * - `promise` 约定模式，允许 `key` 作为 http 获取数据\r\n   * - `none` 正常模式\r\n   */\r\n  mode?: 'promise' | 'none' = 'promise';\r\n  /**\r\n   * 重命名返回参数，例如：\r\n   * - `null` 返回体为内容\r\n   * - `list` 返回体应 `{ list: [] }`\r\n   * - `result.list` 返回体应 `{ result: { list: [] } }`\r\n   */\r\n  reName?: string | string[] = '';\r\n  /**\r\n   * 持久化数据键值前缀\r\n   */\r\n  prefix?: string = '';\r\n  /**\r\n   * 持久化数据元数据存储键名\r\n   */\r\n  meta_key?: string = '__cache_meta';\r\n}\r\n"]}